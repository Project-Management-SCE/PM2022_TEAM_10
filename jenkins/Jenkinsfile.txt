
pipeline {
    agent {
        docker {
            image 'python:3.9'
        }
    }
    stages {
        stage('Build') {
            steps {
                withEnv(["HOME=${env.WORKSPACE}"]){
                    sh 'python -m pip install --upgrade pip'
                    sh 'pip install --user -r requirements.txt'
                }
                sh 'python -m compileall ProjectManagement/'//manage.py'      COMPILE FILES
                //sh 'python -m py_compile manage.py'

            }
        }
        stage('Unit Test') {
            steps {
                sh 'echo "Unit test"'
                withEnv(["HOME=${env.WORKSPACE}"]){
                    dir("ProjectManagement"){
                        sh 'python -m coverage run manage.py test --tag=UT'
                    }
                }
            }
        }
        stage('Integration Test') {
            steps {
                sh 'echo "Integration"'
                withEnv(["HOME=${env.WORKSPACE}"]){
                    dir("ProjectManagement"){
                        sh 'python -m coverage run manage.py test --tag=IT'
                    }
                }
            }
        }
        stage('Metrics') {
            steps {
                sh 'echo "Coverage + Static code analysis"'
                withEnv(["HOME=${env.WORKSPACE}"]){
                    dir("ProjectManagement"){
                        //coverage
                        sh 'python -m coverage report'
                        //static code analysis - pylint
                        sh 'python -m pylint --exit-zero accounts adminPanel associations feedbacks home posts reports'
                    }
                }
            }
        }
    }
}


   