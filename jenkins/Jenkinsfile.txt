
pipeline {
    agent none
    stages {
        stage('Build') {
            agent {
                    docker {
                        image 'python:3.9'
                    }
                }
            steps {
                withEnv(["HOME=${env.WORKSPACE}"]){
                    sh 'python -m pip install --upgrade pip'
                    sh 'pip install --user -r requirements.txt'
                }
                sh 'python -m compileall ProjectManagement/'//manage.py'      COMPILE FILES
                //sh 'python -m py_compile manage.py'

            }
        }
        stage('Test') {
            agent {
                    docker {
                        image 'python:3.9'
                    }
                }            
            steps {
                sh 'echo "Unit test + Integration"'
                withEnv(["HOME=${env.WORKSPACE}"]){
                    dir("ProjectManagement"){
                        sh 'python -m coverage run manage.py test'
                    }
                }
            }
        }
        stage('Metrics') {
            agent {
                    docker {
                        image 'python:3.9'
                    }
                }            
            steps {
                sh 'echo "Coverage + Static code analysis"'
                withEnv(["HOME=${env.WORKSPACE}"]){
                    dir("ProjectManagement"){
                        //coverage
                        sh 'python -m coverage report --ignore-errors'
                        //static code analysis - pylint
                        sh 'python -m pylint --exit-zero accounts'
                        // sh 'python -m pylint --exit-zero accounts adminPanel associations feedbacks home posts reports'
                    }
                }
            }
        }
        stage('Deploy'){
		    agent {
                docker {
                    image 'cimg/base:stable'
                    args '-u root'
                }
            }
            steps {
                sh '''
                    curl https://cli-assets.heroku.com/install.sh | sh;
                    heroku container:login
                    heroku container:push web --app helpo-t10
                    heroku container:release web --app helpo-t10
                '''
            }
	    }
    }
}


   